import streamlit as st
from extra_streamlit_components import CookieManager
import requests
import settings

cookie_name = settings.COOKIE_NAME
cookie_manager = CookieManager()

# 1) –±–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏–∑ session_state –ò–õ–ò –∏–∑ JS-–∫—É–∫–∏
#    (–≤–∞–∂–Ω–æ: –µ—Å–ª–∏ –≤—ã –Ω–∏–≥–¥–µ –Ω–µ –∫–ª–∞–¥—ë—Ç–µ –≤ session_state["access_token"], 
#    —Ç–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —á–∏—Ç–∞—Ç—å –∏–∑ cookie_manager)
token = st.session_state.get("access_token") or cookie_manager.get(cookie_name) or ""

# 2) –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–∫–µ–Ω. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–Ω–¥–µ—Ä –∏ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
if not token:
    st.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")
    if st.button("‚¨Ö –ù–∞–∑–∞–¥ –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"):
        st.switch_page("Home.py")
    st.stop()

# 3) –ó–∞–ø—Ä–æ—Å–∏–º —É –±—ç–∫–µ–Ω–¥–∞ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
resp = requests.get(
    "http://app:8080/user/name", 
    cookies={cookie_name: token}
)
if resp.status_code == 200:
    # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω—É–ª {"username": "<–∏–º—è>"}
    username = resp.json().get("username", "User")
else:
    username = "unlogged user"  # –∏–ª–∏ –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –¥–µ–ª–∞—Ç—å st.error –∏ st.stop()

# 4) –í—ã–≤–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞–±–∏–Ω–µ—Ç–∞
st.title("üî• –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
st.header(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!")

# 5) –ö–Ω–æ–ø–∫–∞ ‚Äú–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤‚Äù
if st.button("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤"):
    st.switch_page("pages/history.py")

# 6) –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥
models = ["CNN", "CatBoost + XGBoost, F1-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å", "CatBoost + RF, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å (Youden‚Äôs J)", "–ê–Ω—Å–∞–º–±–ª—å CNN –∏ –º–µ—Ç–µ–æ–º–æ–¥–µ–ª–∏"]
model = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:", models)

page_map = {
    "CNN": "pages/cnn_page.py",
    "CatBoost + XGBoost, F1-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å": "pages/cb_xgb_page.py",
    "CatBoost + RF, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å (Youden‚Äôs J)": "pages/cb_rf_page.py",
    "–ê–Ω—Å–∞–º–±–ª—å CNN –∏ –º–µ—Ç–µ–æ–º–æ–¥–µ–ª–∏": "pages/ensemble.py"
}

if st.button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"):
    if model in page_map:
        st.session_state.selected_model = model
        st.switch_page(page_map[model])
    else:
        st.warning("–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞.")

# 7) –í—ã—Ö–æ–¥
if st.button("–í—ã–π—Ç–∏"):
    # 1) —É–¥–∞–ª—è–µ–º —Ç–æ–∫–µ–Ω –∏–∑ session_state (–µ—Å–ª–∏ –æ–Ω —Ç–∞–º –ª–µ–∂–∞–ª)
    if "access_token" in st.session_state:
        del st.session_state["access_token"]

    # 2) —É–¥–∞–ª—è–µ–º JS-–∫—É–∫—É –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∏–º–µ–Ω–∏
    cookie_manager.delete(cookie_name)

    # 3) —Å–æ–æ–±—â–∞–µ–º –æ–± —É–¥–∞—á–Ω–æ–º –ª–æ–≥–∞—É—Ç–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Home
    st.success("–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.")
    st.switch_page("Home.py")

# import streamlit as st
# from extra_streamlit_components import CookieManager
# import requests
# import settings

# cookie_name = settings.COOKIE_NAME
# cookie_manager = CookieManager()

# token = st.session_state.get("access_token") or cookie_manager.get(cookie_name) or ""

# if not token:
#     st.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è.")
#     st.stop()

# st.title("–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")


# resp = requests.get(
#     "http://app:8080/user/name",
#     cookies={cookie_name: token}
#     )
# if resp.status_code == 200:
#     username = resp.json().get("username", "User")
# else:
#     username = "unlogged user"

# st.title("üî• –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
# st.header(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!")

# if st.button("      –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤        "):        
#     st.switch_page("pages/history.py")

# models = ["Linear Regression", "Random Forest", "CNN"]
# model = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è:", models)

# page_map = {
#     "CNN": "pages/cnn_page.py",
#     # "Linear Regression": "pages/linear.py",
#     # "Random Forest": "pages/random_forest.py"
# }

# if st.button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"):
#     st.session_state.selected_model = model
#     st.switch_page(page_map[model])

# if st.button("–í—ã–π—Ç–∏"):
#     st.session_state.access_token = None
#     cookie_manager.delete("access_token")
#     st.experimental_rerun()